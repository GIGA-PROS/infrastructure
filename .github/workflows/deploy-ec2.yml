name: Deploy EC2 Instance

# Trigger the workflow manually and on push to main branch
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-ec2:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials using GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 

      # Step 3: Describe the available NixOS AMIs and set AMI_ID as an environment variable
      - name: Describe NixOS AMIs
        id: describe_ami
        run: |
          AMI_ID="ami-0c861134bede6def6"
          
          if [ -z "$AMI_ID" ]; then
            echo "No AMI found matching the criteria."
            exit 1
          fi
          
          echo "AMI_ID=${AMI_ID}" >> $GITHUB_ENV

      # Step 4: Launch the EC2 instance with 64 GB disk size
      - name: Launch EC2 Instance
        id: launch_instance
        run: |
          echo "Launching EC2 instance with AMI ID: $AMI_ID"
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id "$AMI_ID" \
            --instance-type t4g.micro \
            --key-name "${{ secrets.EC2_KEY_NAME }}" \
            --subnet-id "${{ secrets.SUBNET_ID }}" \
            --associate-public-ip-address \
            --block-device-mappings '[{"DeviceName":"/dev/sda1","Ebs":{"VolumeSize":64}}]' \
            --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=${{ secrets.EC2_TAG_NAME }}}]" \
            --query 'Instances[0].InstanceId' \
            --output text)
          
          if [ -z "$INSTANCE_ID" ]; then
            echo "Failed to launch EC2 instance."
            exit 1
          fi
          
          echo "INSTANCE_ID=${INSTANCE_ID}" >> $GITHUB_ENV
